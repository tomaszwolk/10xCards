---
alwaysApply: true
---

# AI Rules for 10xCards

10xCards is a web application designed to automate and accelerate the process of creating educational flashcards. Using artificial intelligence, the application allows users to generate flashcard sets by simply pasting text, eliminating the time-consuming process of manual transcription. The MVP focuses on the basic functionalities of generating and managing flashcards and integrating them with a ready-made repetition algorithm, with an emphasis on simplicity and speed.

## Tech Stack

- Astro 5
- TypeScript 5
- React 19
- Tailwind 4

## Project Structure

When introducing changes to the project, always follow the directory structure below:

- `./src` - source code
- `./src/layouts` - Astro layouts
- `./src/pages` - Astro pages
- `./src/pages/api` - API endpoints
- `./src/components` - client-side components written in Astro (static) and React (dynamic)
- `./src/assets` - static internal assets
- `./public` - public assets

When modifying the directory structure, always update this section.

## Coding practices

### Guidelines for clean code

- Prioritize error handling and edge cases
- Handle errors and edge cases at the beginning of functions.
- Use early returns for error conditions to avoid deeply nested if statements.
- Place the happy path last in the function for improved readability.
- Avoid unnecessary else statements; use if-return pattern instead.
- Use guard clauses to handle preconditions and invalid states early.
- Implement proper error logging and user-friendly error messages.
- Consider using custom error types or error factories for consistent error handling.